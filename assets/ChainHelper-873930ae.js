import{U as u,O as l,v as f}from"./index-d4b27a93.js";import{e as d,c as p}from"./ContractHelper-c04ffd3c.js";const o=f(),m={async getAccountBalance(e){if(!e)return;const r=await fetch(`${o.coreApiUrl}/extended/v1/address/${e}/stx`);if(r.status==200){const t=await r.json();return parseInt(t.balance)}},async getNFTHoldings(e,r,t,n,a,i){if(!e||!r||!t||!n)return;let s=`${o.coreApiUrl}/extended/v1/tokens/nft/holdings?principal=${n}&asset_identifiers=${e}.${r}::${t}`;a&&(s=s+`&limit=${a}`),i&&(s=s+`&offset=${i}`);const c=await fetch(s);if(c.status==200)return await c.json()},async resolveAddress(e){const r="Address invalid";if(!e||e.length==0)return{ret:-1,errMsg:r};if(e.indexOf(".")==-1)return{ret:0,value:e};const t=e.split(".");if(t.length!=2)return{ret:-2,errMsg:r};if(t[0].startsWith("SP")&&u.parseAddress(t[0]))return{ret:0,value:e};const n="SP000000000000000000002Q6VF78",a={contractAddress:n,contractName:"bns",functionName:"name-resolve",functionArgs:[l(t[1].toLowerCase()),l(t[0].toLowerCase())],network:o,senderAddress:n},i=await d(a);let s=p(i);return s.type=="int"?{ret:-1,errMsg:"BNS name not exists"}:{ret:0,value:s.value.owner.value}}};export{m as C};
